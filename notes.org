#+TITLE: Notes for learning C
#+OPTIONS:
* K & R
** Chapter 1 - A tutorial introduction
- Overview of many language feautures

*** Hello world
    #+BEGIN_SRC C :exports both
      #include <stdio.h> // Includes io functions from the standard library

      int main () {
        // Prints to standard output
        // '\n' is an escape sequence that prints a new line
        printf("hello, world\n");  // the string to be printed out is given as an argument
      }
    #+END_SRC

    #+RESULTS:
    | hello | world |
    
An identical program can be created using =puts=
#+BEGIN_SRC C :exports both
  #include <stdio.h>

  int main() {

    puts("hello, world");

    return 0;
  }
#+END_SRC

#+RESULTS:
| hello | world |

The =printf= functions is needed for /formatted/ output.

**** Exercise 1-1
Run the hello world program. Already done above

**** Exercise 1-2
Use =\c= where c is a non existing escape sequence

    #+BEGIN_SRC C :exports both
      #include <stdio.h> // Includes io functions from the standard library

      int main () {
        // Prints to standard output
        // '\n' is an escape sequence that prints a new line
        printf("hello, world\y");  // the string to be printed out is given as an argument
      }
    #+END_SRC

    #+RESULTS:
    | hello | worldy |
    
- The escape character =\= is ignored and instead =y= is printed

**** TODO Research printf


*** Fahrenheit and Celcius
- Variables
- Arithmetic

#+BEGIN_SRC C :exports both
  #include <stdio.h>

  int main() {

    int lower = 0;
    int upper = 300;
    int step = 20;

    int fahr = lower;

    while(fahr <= upper) {
      int celcius = (5.0 / 9.0) * (fahr - 32);
      printf("%d\t%d\n", fahr, celcius);

      fahr += step;
    }

    return 0;
  }
#+END_SRC

#+RESULTS:
|   0 | -17 |
|  20 |  -6 |
|  40 |   4 |
|  60 |  15 |
|  80 |  26 |
| 100 |  37 |
| 120 |  48 |
| 140 |  60 |
| 160 |  71 |
| 180 |  82 |
| 200 |  93 |
| 220 | 104 |
| 240 | 115 |
| 260 | 126 |
| 280 | 137 |
| 300 | 148 |

- =5.0= and =9.0= are floats which evaluate to a float instead of 0 if =5= and =9= were used instead
- All statements in C end with a semicolon
- A while loop evaluates its condition every time and executes its instructions if true, other wise it exits
- =5/9= in C truncates to 0
  #+BEGIN_SRC C :exports both
    #include <stdio.h>

    int main() {

      printf("%d", 5/9); // Truncated to 0 as an integer

      return 0;
    }
  #+END_SRC

  #+RESULTS:
  : 0

**** Data types
C has many data types

***** Research
****** TODO char
****** TODO short
****** TODO long
****** TODO double
       
***** Other data types
There are also other more complex data types such as arrays, structures and unions.


* Modern C
** Level 1: Encounter
*** Getting Started
- C is an imperative programming language
  
**** Listing 1
[[file:modern/level1/listing_1.c][Source code for Listing 1]]

***** Output
#+BEGIN_QUOTE
element 0 is 9,         its square is 81
element 1 is 2.9,       its square is 8.41
element 2 is 0,         its square is 0
element 3 is 7e-05,     its square is 4.9e-09
element 4 is 3e+25,     its square is 9e+50
#+END_QUOTE

***** Notes
- The array =A= is ordered by the indices
  - Element 2 is 0 even though it was never initialized
- The printf function outputs to the terminal
  - format specifiers: allow outside variables to be printed
    - zu:
    - %g:
  - escsape sequences: allow printing odd characters such as ="=
    - \t:
    - \n:

**** Listing 2
    [[file:modern/level1/listing_2.c][Source code for Listing 2]] 
    
- Fails to compile
***** Output
errors are.
#+BEGIN_QUOTE
listing_2.c:4:1: warning: return type of 'main' is not 'int' [-Wmain-return-type]
void main() {

listing_2.c:4:1: note: change return type to 'int'
void main() {
^~~~
int
listing_2.c:15:5: warning: implicitly declaring library function 'printf' with type 'int (const char *, ...)'
      [-Wimplicit-function-declaration]
    printf("element %d is %g \tits square is %g\n",
    ^
listing_2.c:15:5: note: include the header <stdio.h> or explicitly provide a declaration for 'printf'
listing_2.c:21:3: error: void function 'main' should not return a value [-Wreturn-type]
  return 0;
  ^      ~
2 warnings and 1 error generated.

#+END_QUOTE
***** Notes-
- missing include for printf (stdio.h)
- returns 0 even though main is defined as returning void
